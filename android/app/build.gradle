plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    // Add the Crashlytics Gradle plugin
    id 'com.google.firebase.crashlytics'
}

android {
    namespace = "com.aimbot.ticky"
    compileSdk = 36
    ndkVersion = flutter.ndkVersion

    def keystoreProperties = new Properties()
    def keystorePropertiesFile = rootProject.file("key.properties")

    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.aimbot.ticky"
        minSdk = 24
        targetSdk = 36
        versionCode = 22
        versionName = "1.1.9"
        multiDexEnabled true
    }

//    signingConfigs {
////        release {
////            storeFile file(keystoreProperties['storeFile'])
////            storePassword keystoreProperties['storePassword']
////            keyAlias keystoreProperties['keyAlias']
////            keyPassword keystoreProperties['keyPassword']
////        }
//    }


    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
//            signingConfig signingConfigs.release

        }
    }

    flavorDimensions "app"

    productFlavors {
        development {
            dimension "app"
//            dimension "app"
//            applicationIdSuffix ".development"
//            versionNameSuffix "-development"
        }
        staging {
            dimension "app"
//            dimension "app"
//            applicationIdSuffix ".staging"
//            versionNameSuffix "-staging"
        }
        production {
            dimension "app"
//            dimension "app"
//            applicationIdSuffix ".production"
//            versionNameSuffix "-production"
        }
    }

    dependencies {
        // Import the BoM for the Firebase platform
        implementation(platform("com.google.firebase:firebase-bom:33.8.0"))

        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'


        // Add the dependencies for the Crashlytics and Analytics libraries
        // When using the BoM, you don't specify versions in Firebase library dependencies
        implementation("com.google.firebase:firebase-crashlytics")
        implementation("com.google.firebase:firebase-analytics")
        apply plugin: 'com.google.gms.google-services'
    }

}

flutter {
    source = "../.."
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
